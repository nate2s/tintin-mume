#alias {rinfo} {
	#format {tmpLocation} {%p} {%0};
	#regex {$tmpLocation} {^%d$} {#map {at} {&1} {#map {info}}} {#map {info}};
	#unvar {tmpLocation}
}

#alias {run} {
	#var {tmpLocation} {@strip{%0}};
	#if {"$tmpLocation" == "c"} {
		#if {"$lastDestination" != ""} {
			#path {load} {};
			#echo {Recalculating...};
			#regex {$lastDestination} {^%d$} {#map {find} {&1}} {#map {find} {%*%i$lastDestination%*}};
			#var {isRunning} {true};
			#path {walk} {forward}
		};
		#else {
			#echo {No previous destination defined.}
		}
	};
	#elseif {"%1" == "n"} {
		#if {"%2" != ""} {
			#var {tmpResults} {@maplist{{note}{%2}}};
			#list {tmpResults} {create} {$tmpResults[]};
			#if {&tmpResults[] == 1} {
				#path {load} {};
				#echo {Starting trip.};
				#var {lastDestination} {$tmpResults[1]};
				#map {find} {$lastDestination};
				#var {isRunning} {true};
				#path {walk} {forward}
			};
			#elseif {&tmpResults[] == 0} {
				#echo {There are no rooms with the note '%2' in the database.}
			};
			#else {
				#echo {Error: more than one room contains the note '%2'.}
			};
			#unvar {tmpResults}
		};
		#else {
			#echo {You need to supply some note text to find.}
		}
	};
	#elseif {"$tmpLocation" != ""} {
		#regexp {$tmpLocation} {^%d$} {} {#var {tmpLocation} {%*%i$tmpLocation%*}};
		#var {tmpResults} {@maplist{{name}{$tmpLocation}}};
		#list {tmpResults} {create} {$tmpResults[]};
		#if {&tmpResults[] == 1} {
			#path {load} {};
			#echo {Starting trip.};
			#var {lastDestination} {$tmpResults[1]};
			#map {find} {$lastDestination};
			#var {isRunning} {true};
			#path {walk} {forward}
		};
		#elseif {&tmpResults[] == 0} {
			#echo {There are no rooms with the name '%0' in the database.}
		};
		#else {
			#echo {Error: more than one room name contains '%0'.}
		};
		#unvar {tmpResults}
	};
	#else {
		#echo {Syntax: run [n[ note]|c|room ID|room name] - run from your current location to room. If 'c' is given, the previous route (if any) will be recalculated and continued. If 'n' and some text are given, the destination will be set to the room which has a note matching text. Use the unrun command to cancel the running.}
	};
	#unvar {tmpLocation}
}

#alias {unrun} {
	#echo {Canceling route!};
	#path {load} {};
	#var {isRunning} {false}
}

#alias {rfind} {
	#format {tmpLocation} {%p} {%0};
	#list {tmpLength} {tokenize} {$tmpLocation};
	#if {"$tmpLocation" == ""} {
		#echo {Syntax: rfind [c|room name] - Performs a fuzzy search for a room name. If 'c' is specified instead of a room name, will search for the room name that was last captured from the mud. (room name is case insensitive.)}
	};
	#elseif {"$tmpLocation" == "c"} {
		#map {list} {$roomName}
	};
	#elseif {&tmpLength[] <= 3} {
		#echo {Error: String must be at least 4 characters long.}
	};
	#else {
		#map {list} {%*%i$tmpLocation%*}
	};
	#unvar {tmpLength};
	#unvar {tmpLocation}
}

#alias {mapUndo} {
	#map {undo};
	#path {load} {};
	#var {isRunning} {false}
}

#alias {mapMove} {
	#var {attemptingMove} {true};
	#map move %1;
	#send {%1}
}

#alias {^{(cli |clim |climb )?}{n|no|nor|north}{( .*)?}$} {mapMove north}
#alias {^{(cli |clim |climb )?}{s|so|sou|south}{( .*)?}$} {mapMove south}
#alias {^{(cli |clim |climb )?}{e|ea|eas|east}{( .*)?}$} {mapMove east}
#alias {^{(cli |clim |climb )?}{w|we|wes|west}{( .*)?}$} {mapMove west}
#alias {^{(cli |clim |climb )?}{u|up}{( .*)?}$} {mapMove up}
#alias {^{(cli |clim |climb )?}{d|do|dow|down}{( .*)?}$} {mapMove down}

#alias {sync} {
	#if {"$roomName" != ""} {
		#var {tmpResults} {@maplist{{name}{$roomName}}};
		#if {&tmpResults[] == 1} {
			#echo {Syncing to room with name '%s'.} {$roomName};
			#map goto $roomName
		};
		#else {
			#echo {Unable to Sync: more than 1 room in the map has the name '%s'.} {$roomName}
		};
		#unvar {tmpResults}
	};
	#else {
		#echo {Error: roomName variable is empty.}
	}
}

#nop canceled movement patterns
#action {^You can't seem to escape the roots!$} {mapUndo}
#action {^You cannot ride there.$} {mapUndo}
#action {^Your boat cannot enter this place.$} {mapUndo}
#action {^A guard steps in front of you.$} {mapUndo}
#action {^The clerk bars your way.$} {mapUndo}
#nop #action {^You cannot go that way...$} {mapUndo}
#nop #action {^Alas, you cannot go that way...$} {mapUndo}
#action {^You need to swim to go there.$} {mapUndo}
#action {^You failed swimming there.$} {mapUndo}
#action {^You failed to climb there and fall down, hurting yourself.$} {mapUndo}
#action {^Your mount cannot climb the tree!$} {mapUndo}
#action {^No way! You are fighting for your life!$} {
	#if {"$attemptingMove" == "true"} {
		#var {attemptingMove} {false};
		mapUndo
	}
}
#action {^In your dreams, or what?$} {
	#if {"$attemptingMove" == "true"} {
		#var {attemptingMove} {false};
		mapUndo
	}
}
#action {^You are too exhausted.$} {
	#if {"$attemptingMove" == "true"} {
		#var {attemptingMove} {false};
		mapUndo
	}
}
#action {^You unsuccessfully try to break through the ice.$} {mapUndo}
#action {^Your mount refuses to follow your orders!$} {mapUndo}
#action {^You are too exhausted to ride.$} {mapUndo}
#action {^You can't go into deep water!$} {mapUndo}
#action {^You don't control your mount!$} {
	#if {"$attemptingMove" == "true"} {
		#var {attemptingMove} {false};
		mapUndo
	}
}
#action {^Your mount is too sensible to attempt such a feat.$} {mapUndo}
#action {^Scouting in that direction is impossible.$} {mapUndo}
#action {^Scouting {north|south|east|west|up|down}wards is too difficult.$} {mapUndo}
#action {^Oops! You cannot go there riding!$} {mapUndo}
#action {^A {pony|dales-pony|horse|warhorse|pack horse|trained horse|horse of the Rohirrim|brown donkey|mountain mule|hungry warg|brown wolf}{( \(\w\))?} is too exhausted.$} {mapUndo}
#action {^You'd better be swimming if you want to dive underwater.$} {mapUndo}
#action {^You need to climb to go there.$} {mapUndo}
#action {^You cannot climb there.$} {mapUndo}
#action {^If you still want to try, you must 'climb' there.$} {
	#if {"$attemptingMove" == "true"} {
		#var {attemptingMove} {false};
		mapUndo
	}
}
#action { {prevents|keeps} you from going {north|south|east|west|up|down|upstairs|downstairs|past (him|her|it)}.$} {mapUndo}
#action {^Nah... You feel too relaxed to do that.$} {
	#if {"$attemptingMove" == "true"} {
		#var {attemptingMove} {false};
		mapUndo
	};
	#send {stand}
}
#action {^Maybe you should get on your feet first?$} {
	#if {"$attemptingMove" == "true"} {
		#var {attemptingMove} {false};
		mapUndo
	};
	#send {stand}
}


#nop Forced unknown movement
#action {^You are borne along by a strong current.$} {#map leave}
#action {^A guard leads you out of the house.$} {#map leave}
#action {^Suddenly an explosion of ancient rhymes makes the space collapse around you!$} {#map leave}
#action {^The pain stops, your vision clears, and you realize that you are elsewhere.$} {#map leave}
#action {^You feel confused and move along randomly...$} {#map leave}
#action {^You are swept away by the current.$} {#map leave}
#action {^You are swept away by the powerful current of water.$} {#map leave}
#action {^You reached the riverbank.$} {#map leave}
#action {^You board the ferry.$} {#map leave}
#action {^You leave the ferry.$} {#map leave}
#action {^You bend close to the ground, seeking the path to Rivendell...$} {#map leave}
#action {^You are dead! Sorry...$} {#map leave}
#action {^With a jerk, the basket starts gliding down the rope towards the platform.$} {#map leave}
#action {^You cannot control your mount on the slanted and unstable surface! You begin to slide to the north, and plunge toward the water below!$} {#map leave}
#action {^The current pulls you faster. Suddenly, you are sucked downwards into darkness!$} {#map leave}
#action {^You are washed blindly over the rocks, and plummet sickeningly downwards...$} {#map leave}
#action {^You stop moving towards the {left|right} bank and drift downstream.$} {#map leave}
#action {^Oops! You walk off the bridge and fall into the rushing water below!$} {#map leave}
#action {^Holding your breath and with closed eyes, you are squeezed below the surface of the water.$} {#map leave}
#action {^Stepping on the lizard corpses, you use some depressions in the wall for support, push the muddy ceiling apart and climb out of the cave.$} {#map leave}

#nop Forced known movement
#action {^Your feet slip, making you fall to the east!$} {east}

#nop Store the current room name
#action {~^\e[34;47;1;4m{[\w ,'-]+}\e[0m$} {
	#var {attemptingMove} {false};
	#var {roomName} {%1};
	#if {"$isRunning" == "true"} {
		#path {walk} {forward}
	}
}
#action {^It is pitch black...$} {
	#var {attemptingMove} {false};
	#var {roomName} {};
	#if {"$isRunning" == "true"} {
		#path {walk} {forward}
	}
}

#event {END OF PATH} {
	#delay {destinationReached} {#echo {You have reached your destination.}} {0.75};
	#path {load} {};
	#var {isRunning} {false}
}

#var {roomName} {}
#var {lastDestination} {}
#var {isRunning} {false}
#var {attemptingMove} {false}
